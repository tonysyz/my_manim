from manimlib.imports import *
import math

class Functions(GraphScene):
    CONFIG = {
        'x_min':-8,
        'x_max':8,
        "x_axis_width":16,
        'y_min':-4,
        'y_max':4,
        "y_axis_height": 8,
        'graph_origin':ORIGIN,
        'axes_color':WHITE,
    }
    
    e = math.e
    def construct(self):
        text1 = TextMobject(r'$x$、$e^x$与$ln x$的奇妙组合')
        self.play(Write(text1))
        self.wait(2)
        self.play(FadeOutAndShiftDown(text1))
        text2 = TexMobject(r'xe^x').shift(UP*2)
        text3 = TexMobject(r'\frac{e^x}{x}').next_to(text2, RIGHT*3)
        text4 = TexMobject(r'\frac{x}{e^x}').next_to(text2, LEFT*3)
        text5 = TexMobject(r'x \ln x').next_to(text2, DOWN*5)
        text6 = TexMobject(r'\frac{\ln x}{x}').next_to(text3, DOWN*3)
        text7 = TexMobject(r'\frac{x}{\ln x}').next_to(text4, DOWN*3)
        self.play(
            Write(text2),
            Write(text3),
            Write(text4),
            Write(text5),
            Write(text6),
            Write(text7),
        )
        group = VGroup(text2,text3,text4,text5,text6,text7)
        self.wait(3)
        self.play(FadeOut(group))
        #func1 = x*e**x
        #func2 = (e**x)/x
        #func3 = x/(e**x)
        #func4 = x * lnx
        #func5 = lnx/x
        #func6 = x/lnx
        self.setup_axes(animate=True)
        self.play(ShowCreation(NumberPlane(lag_ratio=0)))
        def ln(x):
            return math.log(x,self.e)
        func1 = self.get_graph(lambda x: x*(self.e**x),color=GREEN)
        func2_1 = self.get_graph(lambda x: (self.e**x)/x,color=BLUE,x_min=0.2)
        func2_2 = self.get_graph(lambda x: (self.e**x)/x,color=BLUE,x_max=-0.2)
        func2 = VGroup(func2_1,func2_2)
        func3 = self.get_graph(lambda x: x/(self.e**x),color=RED)
        func4 = self.get_graph(lambda x: x*ln(x),color=ORANGE,x_min=0.001)
        func5 = self.get_graph(lambda x: ln(x)/x,color=YELLOW,x_min=0.1)
        func6_1 = self.get_graph(lambda x: x/ln(x),color=PURPLE_A,x_min=1.1)
        func6_2 = self.get_graph(lambda x: x/ln(x),color=PURPLE_A,x_min=0.0001,x_max=0.9)
        func6 = VGroup(func6_1,func6_2)
        self.play(ShowCreation(func1))
        func1_label = self.get_graph_label(func1,label='y=xe^x')
        self.play(Write(func1_label))
        self.wait(2)
        t1 = TexMobject(r"(xe^x)'")
        t1.to_corner(corner=LEFT+UP)
        t1.shift(RIGHT*2)
        self.play(Write(t1))
        get_der = TextMobject('左','乘右导','，','右','乘左导')
        get_der.scale(0.5)
        get_der.next_to(t1,RIGHT)
        self.play(Write(get_der))
        get_der_func1_1 = TexMobject('=x','e^x','+','e^x','×1').next_to(t1,DOWN)
        self.play(ReplacementTransform(get_der[0],get_der_func1_1[0]))
        self.play(ReplacementTransform(get_der[1],get_der_func1_1[1]))
        self.play(ReplacementTransform(get_der[2],get_der_func1_1[2]))
        self.play(ReplacementTransform(get_der[3],get_der_func1_1[3]))
        self.play(ReplacementTransform(get_der[4],get_der_func1_1[4]))
        get_der_func1_2 = TexMobject('=(x+1)e^x').next_to(get_der_func1_1,DOWN)
        self.play(Write(get_der_func1_2))
        der_1 = self.get_graph(lambda x: (x+1)*(self.e**x))
        self.play(Write(der_1))
        self.wait()
        line1 = self.get_vertical_line_to_graph(-1,func1)
        self.play(ShowCreation(line1))
        d1 = Dot()
        d1.move_to(np.array([-1,(-1)*self.e**(-1),0]))
        self.play(ShowCreation(d1))
        d1_co = TexMobject(r'(-1,-\frac{1}{e})').next_to(d1,DOWN).shift(LEFT)
        self.play(Write(d1_co))
        group1 = VGroup(func1,func1_label,t1,get_der_func1_1,get_der_func1_2,der_1,line1,d1,d1_co)
        self.play(FadeOut(group1))

        self.play(ShowCreation(func2))
        func2_label = self.get_graph_label(func2_1,label='y={e^x\\over x}')
        self.play(Write(func2_label))
        t2 = TexMobject(r"\left(","e^x ",r"\over"," x ",r"\right)'").to_corner(LEFT+UP).shift(RIGHT*2)
        self.play(Write(t2))
        get_der_func2_1 = TexMobject(r'=','{x','e^x','-','1×','e^x',r'\over','x^2}').next_to(t2,DOWN)
        get_der_func2_2 = TexMobject(r'=','{(x-1)e^x',r'\over','x^2}').move_to(get_der_func2_1.get_center())
        self.play(ShowCreation(get_der_func2_1[0]))
        self.play(ReplacementTransform(t2[3],get_der_func2_1[7]))
        self.play(ShowCreation(get_der_func2_1[6]))
        self.play(ReplacementTransform(t2[3],get_der_func2_1[1]))
        self.play(ReplacementTransform(t2[1],get_der_func2_1[2]))
        self.play(ShowCreation(get_der_func2_1[3]))
        self.play(ReplacementTransform(t2[3],get_der_func2_1[4]))
        self.play(ReplacementTransform(t2[1],get_der_func2_1[5]))
        group3 = VGroup(t2[0],t2[2],t2[4])
        y = TexMobject(r"y'").next_to(get_der_func2_2,LEFT)
        self.play(ReplacementTransform(group3,y))
        self.play(ReplacementTransform(get_der_func2_1,get_der_func2_2))
        der_2_1 = self.get_graph(lambda x: (x-1)*(self.e**x)/(x**2),x_min=0.2)
        der_2_2 = self.get_graph(lambda x: (x-1)*(self.e**x)/(x**2),x_max=-0.2)
        der_2 = VGroup(der_2_1,der_2_2)
        self.play(ShowCreation(der_2))
        line2 = self.get_vertical_line_to_graph(1,func2_1)
        self.play(ShowCreation(line2))
        d2 = Dot().move_to(np.array([1,self.e,0]))
        self.play(ShowCreation(d2))
        d2_co = TexMobject(r'(1,e)').next_to(d2,DOWN).shift(RIGHT)
        self.play(Write(d2_co))
        group2 = VGroup(func2,func2_label,get_der_func2_1,get_der_func2_2,y,der_2,d2,d2_co,line2)
        self.play(FadeOut(group2))
        
        self.play(ShowCreation(func3))
        func3_label = self.get_graph_label(func3,label='y={\\frac{x}{e^x}}').shift(UP)
        self.play(Write(func3_label))
        t3 = TexMobject(r"\left(","x",r"\over","e^x",r"\right)'").to_corner(LEFT+UP).shift(RIGHT*2)
        self.play(Write(t3))
        get_der_func3_1 = TexMobject(r"={","e^x","×1","-","x","e^x",r"\over",r"e^{2x}}").next_to(t3,DOWN)
        get_der_func3_2 = TexMobject(r"=\frac{1-x}{e^x}").move_to(get_der_func3_1.get_center())
        self.play(ShowCreation(get_der_func3_1[0]))
        self.play(ReplacementTransform(t3[3],get_der_func3_1[7]))
        self.play(ShowCreation(get_der_func3_1[6]))
        self.play(ReplacementTransform(t3[3],get_der_func3_1[1]))
        self.play(ReplacementTransform(t3[1],get_der_func3_1[2]))
        self.play(ShowCreation(get_der_func3_1[3]))
        self.play(ReplacementTransform(t3[1],get_der_func3_1[4]))
        self.play(ReplacementTransform(t3[3],get_der_func3_1[5]))
        group4 = VGroup(t3[0],t3[2],t3[4])
        y2 = TexMobject(r"y'").move_to(t3.get_center()).next_to(get_der_func3_2,LEFT)
        self.play(ReplacementTransform(get_der_func3_1,get_der_func3_2))
        self.play(ReplacementTransform(group4,y2))
        der_3 = self.get_graph(lambda x: (1-x)/self.e**x)
        self.play(ShowCreation(der_3))
        line3 = self.get_vertical_line_to_graph(1,func3)
        self.play(Write(line3))
        d3 = Dot().move_to(np.array([1,1/self.e,0]))
        self.play(ShowCreation(d3))
        d3_co = TexMobject(r'(1,{1\over e})').move_to(np.array([1,1/self.e,0])).shift(UP)
        self.play(Write(d3_co))
        group3 = VGroup(y2,get_der_func3_2,der_3,d3_co,func3,func3_label,d3,line3)
        self.play(FadeOut(group3))


        self.play(ShowCreation(func4))
        func4_label = self.get_graph_label(func4,label='y=x \\ln x').shift(UP)
        self.play(Write(func4_label))
        t4 = TexMobject(r"(x \ln x)'").to_corner(LEFT+UP).shift(RIGHT)
        self.play(Write(t4))
        get_der = TextMobject('左','乘右导','，','右','乘左导')
        get_der.next_to(t4,RIGHT)
        get_der.scale(0.5)
        self.play(Write(get_der))
        get_der_func4_1 = TexMobject(r"=",r"x \cdot",r"{1 \over x}","+",r"\ln x","×1").next_to(t4,DOWN)
        get_der_func4_2 = TexMobject(r"=\ln x +1").move_to(get_der_func4_1.get_center())
        self.play(ShowCreation(get_der_func4_1[0]))
        self.play(ReplacementTransform(get_der[0],get_der_func4_1[1]))
        self.play(ReplacementTransform(get_der[1],get_der_func4_1[2]))
        self.play(ReplacementTransform(get_der[2],get_der_func4_1[3]))
        self.play(ReplacementTransform(get_der[3],get_der_func4_1[4]))
        self.play(ReplacementTransform(get_der[4],get_der_func4_1[5]))
        y4 = TexMobject(r"y'").move_to(t4.get_center()).next_to(get_der_func4_2,LEFT)
        self.play(ReplacementTransform(get_der_func4_1,get_der_func4_2))
        self.play(ReplacementTransform(t4,y4))
        der_4 = self.get_graph(lambda x: ln(x)+1,x_min=0.02)
        self.play(ShowCreation(der_4))
        line4 = self.get_vertical_line_to_graph(1/self.e,func4)
        self.play(Write(line4))
        d4 = Dot().move_to(np.array([1/self.e,-1/self.e,0]))
        self.play(ShowCreation(d4))
        d4_co = TexMobject(r'(-{1\over e},-{1\over e})').move_to(np.array([1,1/self.e,0])).shift(DOWN)
        self.play(Write(d4_co))
        group4 = VGroup(y4,get_der_func4_2,der_4,d4_co,func4,func4_label,d4,line4)
        self.play(FadeOut(group4))


        self.play(ShowCreation(func5))
        func5_label = self.get_graph_label(func5,label='y={\\frac{\ln x}{x}}').shift(UP)
        self.play(Write(func5_label))
        t5 = TexMobject(r"\left(",r"\ln x",r" \over"," x ",r"\right)'").to_corner(LEFT+UP).shift(RIGHT*2)
        self.play(Write(t5))
        get_der_func5_1 = TexMobject(r"=",r"{{x \cdot",r" {1 \over x} ",r"-",r" \ln x ",r"×1}",r"\over",r" x^2}").next_to(t5,DOWN)
        get_der_func5_2 = TexMobject(r"=\frac{1-\ln x}{x^2}").next_to(t5,DOWN)
        self.play(ShowCreation(get_der_func5_1[0]))
        self.play(ReplacementTransform(t5[3],get_der_func5_1[7]))
        self.play(ShowCreation(get_der_func5_1[6]))
        self.play(ReplacementTransform(t5[3],get_der_func5_1[1]))
        self.play(ReplacementTransform(t5[1],get_der_func5_1[2]))
        self.play(ShowCreation(get_der_func5_1[3]))
        self.play(ReplacementTransform(t5[1],get_der_func5_1[4]))
        self.play(ReplacementTransform(t5[3],get_der_func5_1[5]))
        group5 = VGroup(t5[0],t5[2],t5[4])
        y5 = TexMobject(r"y'").next_to(get_der_func5_2,LEFT)
        self.play(ReplacementTransform(get_der_func5_1,get_der_func5_2))
        self.play(ReplacementTransform(group5,y5))
        der_5 = self.get_graph(lambda x: (1-ln(x))/x**2,x_min=0.1)
        self.play(ShowCreation(der_5))
        line5 = self.get_vertical_line_to_graph(self.e,func5)
        self.play(Write(line5))
        d5 = Dot().move_to(np.array([self.e,1/self.e,0]))
        self.play(ShowCreation(d5))
        d5_co = TexMobject(r'(e,{1\over e})').move_to(np.array([self.e,1/self.e,0])).shift(UP)
        self.play(Write(d5_co))
        group5 = VGroup(y5,get_der_func5_2,der_5,d5_co,func5,func5_label,d5,line5)
        self.play(FadeOut(group5))

        #func6_1 = self.get_graph(lambda x: x/ln(x),color=PURPLE_A,x_min=1.1)
        #func6_2 = self.get_graph(lambda x: x/ln(x),color=PURPLE_A,x_min=0.1,x_max=0.9)
        #func6 = VGroup(func6_1,func6_2)
        self.play(ShowCreation(func6))
        func6_label = self.get_graph_label(func6_1,label='y={\\frac{x}{\\ln x}}').shift(DOWN)
        self.play(Write(func6_label))
        t6 = TexMobject(r"\left(",r"{{x}",r" \over",r" {\ln x}}",r"\right)'").to_corner(LEFT+UP).shift(RIGHT*2)
        self.play(Write(t6))
        get_der_func6_1 = TexMobject(r"= ",r"{{\ln x",r" × 1",r" -",r" x ",r"\cdot {1 \over x}}",r"\over",r"{(\ln x)^2}}").next_to(t6,DOWN)
        get_der_func6_2 = TexMobject(r"=\frac{\ln x - 1}{(\ln x)^2}").next_to(t6,DOWN)
        self.play(ShowCreation(get_der_func6_1[0]))
        self.play(ReplacementTransform(t6[3],get_der_func6_1[7]))
        self.play(ShowCreation(get_der_func6_1[6]))
        self.play(ReplacementTransform(t6[3],get_der_func6_1[1]))
        self.play(ReplacementTransform(t6[1],get_der_func6_1[2]))
        self.play(ShowCreation(get_der_func6_1[3]))
        self.play(ReplacementTransform(t6[1],get_der_func6_1[4]))
        self.play(ReplacementTransform(t6[3],get_der_func6_1[5]))
        group6 = VGroup(t6[0],t6[2],t6[4])
        y6 = TexMobject(r"y'").next_to(get_der_func6_2,LEFT)
        self.play(ReplacementTransform(get_der_func6_1,get_der_func6_2))
        self.play(ReplacementTransform(group6,y6))
        der_6_1 = self.get_graph(lambda x: (ln(x)-1)/(ln(x)**2),x_min=0.01,x_max=0.9)
        der_6_2 = self.get_graph(lambda x: (ln(x)-1)/(ln(x)**2),x_min=1.1,)
        der_6 = VGroup(der_6_1,der_6_2)
        self.play(ShowCreation(der_6))
        line6 = self.get_vertical_line_to_graph(self.e,func6_1)
        self.play(Write(line6))
        d6 = Dot().move_to(np.array([self.e,self.e,0]))
        self.play(ShowCreation(d6))
        d6_co = TexMobject(r'(e,e)').move_to(np.array([self.e,self.e,0])).shift(UP)
        self.play(Write(d6_co))
        group6 = VGroup(y6,get_der_func6_2,der_6,d6_co,func6,func6_label,d6,line6)
        self.play(FadeOut(group6))



class Text(Scene):
    def construct(self):
        fun_1_lim1 = TexMobject(r'\lim\limits_{x\to+\infty}xe^x=+\infty').to_edge(UP)
        fun_1_lim2 = TexMobject(r'\lim\limits_{x\to-\infty}xe^x=0').next_to(fun_1_lim1,DOWN)
        fun_1_lim3 = TexMobject(r'\lim\limits_{x\to -1}xe^x=-\frac{1}{e}').next_to(fun_1_lim2,DOWN)
        fun_1_lim4 = TexMobject(r'\lim\limits_{x\to0}xe^x=0').next_to(fun_1_lim3,DOWN)
        fun_1_lim5 = TexMobject(r'\lim\limits_{x\to1}xe^x=e').next_to(fun_1_lim4,DOWN)
        self.play(
            Write(fun_1_lim1),Write(fun_1_lim2),Write(fun_1_lim3),Write(fun_1_lim4),Write(fun_1_lim5)
        )
        